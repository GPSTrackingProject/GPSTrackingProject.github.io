
<html>
	<head>
		<title>-=-Hacked-=-</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<link rel="icon" href="http://s16.postimg.org/p4b1u82x1/images.jpg" type="image/png"/>
<script language="JavaScript">
var numraindrops="150";
var speed="5";
var rainsize="2";
var wind="left";
var genxgallery="";

function tb5_makeArray(n){ this.length = n; return this.length;
}
tb5_messages = new tb5_makeArray(2);
tb5_messages[0] = "[#] Hacked By #20K Card ƒêT Vina [#]";
tb5_messages[1] = "[+] We Are #404_Error [+]";
tb5_rptType = 'infinite';
tb5_rptNbr = 10;
tb5_speed = 50;
tb5_delay = 2000;
var tb5_counter=1;
var tb5_currMsg=0;
var tb5_stsmsg="";
function tb5_shuffle(arr){
var k;
for (i=0; i<arr.length; i++){ k = Math.round(Math.random() * (arr.length - i - 1)) + i; temp = arr[i];arr[i]=arr[k];arr[k]=temp;
}
return arr;
}
tb5_arr = new tb5_makeArray(tb5_messages[tb5_currMsg].length);
tb5_sts = new tb5_makeArray(tb5_messages[tb5_currMsg].length);
for (var i=0; i<tb5_messages[tb5_currMsg].length; i++){ tb5_arr[i] = i; tb5_sts[i] = "_";
}
tb5_arr = tb5_shuffle(tb5_arr);
function tb5_init(n){
var k;
if (n == tb5_arr.length){ if (tb5_currMsg == tb5_messages.length-1){ if ((tb5_rptType == 'finite') && (tb5_counter==tb5_rptNbr)){ clearTimeout(tb5_timerID); return; } tb5_counter++; tb5_currMsg=0; } else{ tb5_currMsg++; } n=0; tb5_arr = new tb5_makeArray(tb5_messages[tb5_currMsg].length); tb5_sts = new tb5_makeArray(tb5_messages[tb5_currMsg].length); for (var i=0; i<tb5_messages[tb5_currMsg].length; i++){ tb5_arr[i] = i; tb5_sts[i] = "_"; } tb5_arr = tb5_shuffle(tb5_arr); tb5_sp=tb5_delay;
}
else{ tb5_sp=tb5_speed; k = tb5_arr[n]; tb5_sts[k] = tb5_messages[tb5_currMsg].charAt(k); tb5_stsmsg = ""; for (var i=0; i<tb5_sts.length; i++) tb5_stsmsg += tb5_sts[i]; document.title = tb5_stsmsg; n++; } tb5_timerID = setTimeout("tb5_init("+n+")", tb5_sp);
}
function tb5_randomizetitle(){ tb5_init(0);
}
tb5_randomizetitle();

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.1/jquery.min.js" type="text/javascript">
</script> 
<style>
body{
text-align: center;
font-size: 12px;
font-family: verdana;
background-color: black;
background: url('http://0up.ir/img/Album/3-0-1-1.gif') repeat center center fixed black;
}
h1 {
padding: 10px 15px;
margin: 0px;
font-size: 14px;
background-color: #000000;
//background-image: -moz-linear-gradient(100% 100% 90deg, #777, #999) !important;
//background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#999), to(#777)) !important;
color: #FFF;
//-webkit-border-radius:8px 8px 0px 0px;
//-moz-border-radius: 8px 8px 0px 0px;
border-radius: 8px 8px 0px 0px;
text-shadow:1px 1px 2px #333333;
opacity: 0.5;
}
table {
width: 565px;
}
table tr td{
font-family: verdana;
font-size: 11px;
padding: 10px 5px;
border-bottom: solid 1px #CCC;

}
#wrapper{
width: 800px;
margin: 15px auto;
text-align: left;
background: url('http://parsiup.com/upload/1trc_46476143913891493736.jpg') no-repeat center center fixed;
}
#console{
height: 450px;
overflow: auto;
background-color: #000;
padding: 15px;
font-family: monospace;
font-size: 12px;
color: #FFF;
}
.content{
padding: 15px;
}
#commander{
border: solid 1px #CCC;
padding: 5px 10px;
-webkit-border-radius: 2px;
-moz-border-radius: 2px;
border-radius: 2px;
margin: 5px;
width: 590px;
height: 30px;
}
.box{
-moz-box-shadow: 1px 1px 8px #666;
-webkit-box-shadow: 1px 1px 8px #666;
box-shadow: 1px 1px 8px #40D5D2;
border: solid 1px black;
-webkit-border-radius: 8px 8px 0px 0px;
-moz-border-radius: 8px 8px 0px 0px;
border-radius: 8px 8px 0px 0px;
margin: 15px 0px;
background-color: #F5F5F5;
opacity: 0.8;
}
#help{
width: 300px;
float: right;
}
.prefix{
color: #0077E7;
}
.keyword{
color: #9eff63;
}
.error{
color: #FF0000;
}
.spacer{
clear: both;
display: block;
}
</style>
<script type="text/javascript">
TypingText = function(element, interval, cursor, finishedCallback) {
if((typeof document.getElementById == "undefined") || (typeof 

element.innerHTML == "undefined")) {
this.running = true;
return;
}
this.element = element;
this.finishedCallback = (finishedCallback ? finishedCallback : function() { 

return; });
this.interval = (typeof interval == "undefined" ? 100 : interval);
this.origText = this.element.innerHTML;
this.unparsedOrigText = this.origText;
this.cursor = (cursor ? cursor : "");
this.currentText = "";
this.currentChar = 0;
this.element.typingText = this;
if(this.element.id == "") this.element.id = "typingtext" + 

TypingText.currentIndex++;
TypingText.all.push(this);
this.running = false;
this.inTag = false;
this.tagBuffer = "";
this.inHTMLEntity = false;
this.HTMLEntityBuffer = "";
}
TypingText.all = new Array();
TypingText.currentIndex = 0;
TypingText.runAll = function() {
for(var i = 0; i < TypingText.all.length; i++) TypingText.all[i].run();
}
TypingText.prototype.run = function() {
if(this.running) return;
if(typeof this.origText == "undefined") {
setTimeout("document.getElementById('" + this.element.id + 

"').typingText.run()", this.interval);
return;
}
if(this.currentText == "") this.element.innerHTML = "";
if(this.currentChar < this.origText.length) {
if(this.origText.charAt(this.currentChar) == "<" && !this.inTag) {
this.tagBuffer = "<";
this.inTag = true;
this.currentChar++;
this.run();
return;
} else if(this.origText.charAt(this.currentChar) == ">" && this.inTag) {
this.tagBuffer += ">";
this.inTag = false;
this.currentText += this.tagBuffer;
this.currentChar++;
this.run();
return;
} else if(this.inTag) {
this.tagBuffer += this.origText.charAt(this.currentChar);
this.currentChar++;
this.run();
return;
} else if(this.origText.charAt(this.currentChar) == "&" && !

this.inHTMLEntity) {
this.HTMLEntityBuffer = "&";
this.inHTMLEntity = true;
this.currentChar++;
this.run();
return;
} else if(this.origText.charAt(this.currentChar) == ";" && 

this.inHTMLEntity) {
this.HTMLEntityBuffer += ";";
this.inHTMLEntity = false;
this.currentText += this.HTMLEntityBuffer;
this.currentChar++;
this.run();
return;
} else if(this.inHTMLEntity) {
this.HTMLEntityBuffer += this.origText.charAt(this.currentChar);
this.currentChar++;
this.run();
return;
} else {
this.currentText += this.origText.charAt(this.currentChar);
}
this.element.innerHTML = this.currentText;
this.element.innerHTML += (this.currentChar < this.origText.length - 1 ? 

(typeof this.cursor == "function" ? this.cursor(this.currentText) : this.cursor) : 

"");
this.currentChar++;
setTimeout("document.getElementById('" + this.element.id + 

"').typingText.run()", this.interval);
} else {
this.currentText = "";
this.currentChar = 0;
this.running = false;
this.finishedCallback();
}
}
</script>
	</head>
	<body>
	<object width="0" height="0"><param name="movie" value="https://www.youtube.com/v/Gc74aRe7OLM?hl=pt_BR&amp;version=3&autoplay=1"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="https://www.youtube.com/v/Gc74aRe7OLM?hl=pt_BR&amp;version=3&autoplay=1" type="application/x-shockwave-flash" width="0" height="0" allowscriptaccess="always" allowfullscreen="true"></embed></object>
		<div id="loading_rate" style="display:none;"></div>
		<div id="wrapper">
		<div class="box">
		<h1>root@#Zombie</h1>
		<div id="console"><span class="prefix">
		<p id="message">
		<font color="#ff0000">root@#Zombie: </font><font color="white">Hacked by #Card Vina 20K</font><br>
		<font color="#ff0000">root@#Zombie: </font><font color="white">We are Anonymous</font><br>
		<font color="#ff0000">root@#Zombie: </font><font color="white">We are Legion</font><br>
		<font color="#ff0000">root@#Zombie: </font><font color="white">We do not forgive</font><br>
		<font color="#ff0000">root@#Zombie: </font><font color="white">We do not forget</font><br>
		<font color="#ff0000">root@#Zombie: </font><font color="white">Expect us!!!</font><br>
		<script type="text/javascript">
		new TypingText(document.getElementById("message"), 20, function(i){
			var ar = new Array("|", "|", "|", "|"); return " " + ar[i.length % ar.length]; 
		});
		TypingText.runAll();
		</script>
	</body>
</html>